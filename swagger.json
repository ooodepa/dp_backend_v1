{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/users": {
      "post": {
        "operationId": "UsersController_createUser",
        "summary": "Регистрация пользователя",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Пользователь зарегистрирован и пользователю пришло на почту ссылка подтверждения.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Логин занят другим пользователем. \n\nE-mail занят другим пользователем. \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзация не совершена, так как не удалось отправить письмо с ссылкой активации на почту. \n\nЧто-то пошло не так на сервере. \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_users",
          "any"
        ]
      },
      "get": {
        "operationId": "UsersController_findOne",
        "summary": "Получить информацию о профиле",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "default": {
            "description": "Получили информацию о пользователе",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_users",
          "any"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/users/activate-account/{token}": {
      "get": {
        "operationId": "UsersController_activateAccount",
        "summary": "Активация аккаунта",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь подтвердил зарегистрированный аккаунт.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Ссылка не действительна, так как прошло 24 часа (токен просрочен). \n\nСсылка не действительна, так как токен поддельный (токен не прошел проверку валидности). \n\nСсылка не действительна, так как токен не зарегстрирован в БД (токен прошел проверку, но его нет в БД). \n\nСсылка не действительна, так как аккаунт был активирован. \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Не совершено обновление статуса пользователя. \n\nЧто-то пошло не так на сервере. \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_users",
          "any"
        ]
      }
    },
    "/api/v1/users/change-email": {
      "patch": {
        "operationId": "UsersController_updateEmail",
        "summary": "Запрос на смену электронной почты на новую электронную почту",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeEmailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Заявка отправлена на новую почту и предупреждение отправлено на старую почту.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Новая почта совпадает с текущей.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "429": {
            "description": "Cлишком много запросов о смене электроной почты за не прошедшие 3 часа.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзация не совершена, так как нет таблицы в БД (не сохранения запись о смене старой электронной почты на новую). \n\nТранзация не совершена, так как не отправлено письмо на новую и старую почту. \n\nЧто-то пошло не так на сервере. \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_users",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/users/change-email/{token}/confirm": {
      "get": {
        "operationId": "UsersController_confirmChangeEmail",
        "summary": "Подтверждаем смену на новую электронную почту",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Электронная почта изменена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Ссылка не действительна, так как прошло 3 часа (токен просрочен). \n\nСсылка не действительна, так как токен подделан (токен не прошел валидацию). \n\nСсылка не действительна, так как токена не зарегистрирован в БД. \n\nСсылка не действительна, так как почта была сменена, либо заявка на смену почты была отклонена. \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзация не совернеша (заявка не отмечена закрытой, пользователю не поменял email на новый). \n\nЧто-то пошло не так на сервере. \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_users",
          "any"
        ]
      }
    },
    "/api/v1/users/change-email/{token}/delete": {
      "get": {
        "operationId": "UsersController_deleteChangeEmail",
        "summary": "Отменяем смену на новую электронную почту",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Заявка на смену электронной почты отменена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Cсылка не действительна, так как прошло 3 часа (токен просрочен). \n\nCсылка не действительна, так как токен подделан (токен не прошел валидацию). \n\nСсылка не действительна, так как токен не зарегистрирован в БД. \n\nСсылка не действительна, так как почта была сменена, либо заявка на смену почты была отклонена. \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_users",
          "any"
        ]
      }
    },
    "/api/v1/users/forget-password": {
      "post": {
        "operationId": "UsersController_forgetPassword",
        "summary": "Забыли пароль",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "На электронную почту отправлен логин и новый сгенерированный пароль",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Пользователя с такой электронной почтой не существует",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзация не совернеша, так как сгенерированный пароль не записался в БД. \n\nТранзация не совернеша, так как письмо с логином и паролем не отправлено на электронную почту. \n\nЧто-то пошло не так на сервере. \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_users",
          "any"
        ]
      }
    },
    "/api/v1/users/change-password": {
      "patch": {
        "operationId": "UsersController_updatePassword",
        "summary": "Меняем пароль",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Пароль изменен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Не тот старый пароль",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзация не совернеша, так как новый пароль не записан в БД. \n\nТранзация не совернеша, так как не удалось завершить все сессии. \n\nЧто-то пошло не так на сервере. \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_users",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/users/is-login": {
      "post": {
        "operationId": "UsersController_checkIsLogin",
        "summary": "Проверка access токена",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Пользователь авторизован"
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_users",
          "USER"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/users/is-admin": {
      "post": {
        "operationId": "UsersController_checkIsAdmin",
        "summary": "Проверка роли админа",
        "parameters": [],
        "responses": {
          "200": {
            "description": "У пользователя роль администратора"
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_users",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/users/is-manager": {
      "post": {
        "operationId": "UsersController_checkIsManager",
        "summary": "Проверка роли менеджера",
        "parameters": [],
        "responses": {
          "200": {
            "description": "У пользователя роль менеджера"
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_users",
          "MANAGER"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/sessions": {
      "post": {
        "operationId": "SessionsController_create",
        "summary": "Аутентификация",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSessionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Пользователь авторизовался",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Нет пользователя с таким логином или электронной почтой. \n\nНе тот пароль \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_sessions",
          "any"
        ]
      },
      "get": {
        "operationId": "SessionsController_findAll",
        "summary": "Получить список сессий",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Получили список записей",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSessionsDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_sessions",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "patch": {
        "operationId": "SessionsController_update",
        "summary": "Получить новый access токен (нужен refresh токен)",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Получили новый access токен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSessionResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Refresh токен просрочен \n\nRefresh токен не передан \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_sessions",
          "any"
        ],
        "security": [
          {
            "refresh-token": []
          }
        ]
      },
      "delete": {
        "operationId": "SessionsController_removeAll",
        "summary": "Закрыть все сессии",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Закрыли все сессии.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_sessions",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/sessions/logout": {
      "post": {
        "operationId": "SessionsController_logout",
        "summary": "Выход с аккаунта",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Пользователь вышел с аккаунта",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSessionResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_sessions",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/sessions/{id}": {
      "delete": {
        "operationId": "SessionsController_remove",
        "summary": "Закрыть сессию по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Закрыли сессию по id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_sessions",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/item-categories": {
      "post": {
        "operationId": "ItemCategoriesController_create",
        "summary": "Создание записи",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Запись создана успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-categories",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "get": {
        "operationId": "ItemCategoriesController_findAll",
        "summary": "Получить список записей",
        "parameters": [
          {
            "name": "dp_itemBrandId",
            "required": false,
            "in": "query",
            "description": "Например: `1`, `2`, `3` ...",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brand",
            "required": false,
            "in": "query",
            "example": "de-pa-electric",
            "description": "Например: `de-pa-electric`, `mono-electric`, `mega`...",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "required": false,
            "in": "query",
            "example": "xml",
            "description": "Например: `xml`, `json`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили список записей\n\n\nПример XML:\n\n\n- `<?xml version=\"1.0\" encoding=\"UTF-8\"?>`\n- `<ARRAY>`\n  - `<OBJECT>`\n    - `<dp_id>0</dp_id>`\n    - `<dp_itemBrandId>0</dp_itemBrandId>`\n    - `<dp_name>Аксессуары</dp_name>`\n    - `<dp_photoUrl>https://example.com/img.png</dp_photoUrl>`\n    - `<dp_urlSegment>dp-accessories</dp_urlSegment>`\n    - `<dp_sortingIndex>10000</dp_sortingIndex>`\n    - `<dp_seoKeywords>вилка вилки патроны патрон</dp_seoKeywords>`\n    - `<dp_seoDescription>Продукты DE-PA Electric. Аксессуары</dp_seoDescription>`\n    - `<dp_isHidden>false</dp_isHidden>`\n  - `</OBJECT>`\n  - `<OBJECT>`\n    - `<!-- Аналогично как и первый элемент массива -->`\n  - `</OBJECT>`\n- `</ARRAY>`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemCategoryDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-categories",
          "any"
        ]
      }
    },
    "/api/v1/item-categories/bulk": {
      "post": {
        "operationId": "ItemCategoriesController_createBulk",
        "summary": "Создание несколько записей за раз",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBulkItemCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Записи добавлены в БД",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-categories",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "put": {
        "operationId": "ItemCategoriesController_updateBulk",
        "summary": "Обновление записей транзакцией",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBulkItemCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновили записи. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-categories",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/item-categories/{id}": {
      "get": {
        "operationId": "ItemCategoriesController_findOne",
        "summary": "Получить запись по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemCategoryDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-categories",
          "any"
        ]
      },
      "patch": {
        "operationId": "ItemCategoriesController_update",
        "summary": "Обновление записи по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-categories",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "ItemCategoriesController_remove",
        "summary": "Удаление записи по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Удалили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-categories",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/item-categories/filter-one/url/{url}": {
      "get": {
        "operationId": "ItemCategoriesController_findOneByUrl",
        "summary": "Получить запись по id",
        "parameters": [
          {
            "name": "url",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemCategoryDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-categories",
          "any"
        ]
      }
    },
    "/api/v1/item-characteristics": {
      "post": {
        "operationId": "ItemCharacteristicsController_create",
        "summary": "Создание записи",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemCharacteristicDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Запись создана успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-characteristics",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "get": {
        "operationId": "ItemCharacteristicsController_findAll",
        "summary": "Получить список записей",
        "parameters": [
          {
            "name": "format",
            "required": false,
            "in": "query",
            "description": "Например: `xml`, `json`.",
            "schema": {
              "default": "xml",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили список записей\n\n\nПример XML:\n\n\n- `<?xml version=\"1.0\" encoding=\"UTF-8\"?>`\n- `<ARRAY>`\n  - `<OBJECT>`\n    - `<dp_id>0</dp_id>`\n    - `<dp_sortingIndex>0</dp_sortingIndex>`\n    - `<dp_name>Высота</dp_name>`\n    - `<dp_unit>см</dp_unit>`\n    - `<dp_isHidden>false</dp_isHidden>`\n  - `<OBJECT>`\n  - `<OBJECT>`\n    - `<!-- Аналогично как и первый элемент массива -->`\n  - `</OBJECT>`\n- `<ARRAY>`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemCharacteristicWithIdDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-characteristics",
          "any"
        ]
      }
    },
    "/api/v1/item-characteristics/bulk": {
      "post": {
        "operationId": "ItemCharacteristicsController_createBulk",
        "summary": "Создание несколько записей за раз",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBulkItemCharacteristicDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Записи добавлены в БД",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-characteristics",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "put": {
        "operationId": "ItemCharacteristicsController_updateBulk",
        "summary": "Обновление записи по id",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBulkItemCharacteristicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-characteristics",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/item-characteristics/{id}": {
      "get": {
        "operationId": "ItemCharacteristicsController_findOne",
        "summary": "Получить запись по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemCharacteristicWithIdDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-characteristics",
          "any"
        ]
      },
      "patch": {
        "operationId": "ItemCharacteristicsController_update",
        "summary": "Обновление записи по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemCharacteristicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-characteristics",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "ItemCharacteristicsController_remove",
        "summary": "Удаление записи по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Удалили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-characteristics",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/items/image/model/{model}": {
      "get": {
        "operationId": "ItemsController_getImageByModel",
        "summary": "Получить список записей",
        "parameters": [
          {
            "name": "model",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_items",
          "any"
        ]
      }
    },
    "/api/v1/items": {
      "post": {
        "operationId": "ItemsController_create",
        "summary": "Создание записи транзакцией",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Запись создана успешно. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзакция не выполнена.Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_items",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "get": {
        "operationId": "ItemsController_findAll",
        "summary": "Получить список записей",
        "parameters": [
          {
            "name": "dp_itemCategoryId",
            "required": false,
            "in": "query",
            "description": "Например: `1`, `2`, `3`...",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dp_model",
            "required": false,
            "in": "query",
            "description": "Например: `10012`...",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "Например: `dp-accessories`...",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brand",
            "required": false,
            "in": "query",
            "example": "de-pa-electric",
            "description": "Например: `de-pa-electric`, `mono-electric`, `mega`...",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "required": false,
            "in": "query",
            "example": "xml",
            "description": "Например: `xml`, `json`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили список записей\n\n\nПример XML:\n\n\n- `<?xml version=\"1.0\" encoding=\"UTF-8\"?>`\n- `<ARRAY>`\n  - `<OBJECT>`\n    - `<dp_id>xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</dp_id>`\n    - `<dp_itemCategoryId>1</dp_itemCategoryId>`\n    - `<dp_name>Розетка тройная встравая с заземлением</dp_name>`\n    - `<dp_photoUrl>https://example.com/img.png</dp_photoUrl>`\n    - `<dp_model>10012</dp_model>`\n    - `<dp_seoKeywords>розетка розетки</dp_seoKeywords>`\n    - `<dp_seoDescription>Розетка тройная встравая с заземлением. 10012</dp_seoDescription>`\n    - `<dp_isHidden>false</dp_isHidden>`\n    - Массив характеристик:\n      - `<dp_itemCharacteristics>`\n        - `<dp_id></dp_id>`\n        - `<dp_itemId></dp_itemId>`\n        - `<dp_characteristicId></dp_characteristicId>`\n        - `<dp_value></dp_value>`\n      - `</dp_itemCharacteristics>`\n      - `<dp_itemCharacteristics>`\n        - `<!-- Второй элемент массива по аналогии -->`\n      - `</dp_itemCharacteristics>`\n    - Галерея картинок:\n      - `<dp_itemGalery>`\n        - `<dp_id></dp_id>`\n        - `<dp_itemId></dp_itemId>`\n        - `<dp_photoUrl></dp_photoUrl>`\n      - `</dp_itemGalery>`\n      - `<dp_itemGalery>`\n        - `<!-- Второй элемент массива по аналогии -->`\n      - `</dp_itemGalery>`\n  - `</OBJECT>`\n  - `<OBJECT>`\n    - `<!-- Аналогично как и первый элемент массива -->`\n  - `</OBJECT>`\n- `</ARRAY>`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Транзакция не выполнена.Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_items",
          "any"
        ]
      }
    },
    "/api/v1/items/bulk": {
      "post": {
        "operationId": "ItemsController_createBulk",
        "summary": "Создание несколько записей за раз транзакцией",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBulkItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Записи добавлены в БД. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзакция не выполнена.Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_items",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "put": {
        "operationId": "ItemsController_updateBulk",
        "summary": "Обновление записи по uuid транзакцией",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBulkItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновили запись по uuid. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзакция не выполнена.Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_items",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/items/filter-one/model/{model}": {
      "get": {
        "operationId": "ItemsController_findOneByModel",
        "summary": "Получить запись по id",
        "parameters": [
          {
            "name": "model",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_items",
          "any"
        ]
      }
    },
    "/api/v1/items/filter/models": {
      "post": {
        "operationId": "ItemsController_findModels",
        "summary": "Получить список записей",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindItemModelsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Получили список записей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_items",
          "any"
        ]
      }
    },
    "/api/v1/items/filter/ids": {
      "post": {
        "operationId": "ItemsController_findIds",
        "summary": "Получить список записей",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindItemIdsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Получили список записей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_items",
          "any"
        ]
      }
    },
    "/api/v1/items/search": {
      "post": {
        "operationId": "ItemsController_search",
        "summary": "Получить список записей",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchItemsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Получили список записей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_items",
          "any"
        ]
      }
    },
    "/api/v1/items/search-all": {
      "post": {
        "operationId": "ItemsController_searchAll",
        "summary": "Получить список записей",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchAllItemsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Получили список записей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetItemDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_items",
          "any"
        ]
      }
    },
    "/api/v1/items/{id}": {
      "get": {
        "operationId": "ItemsController_findOne",
        "summary": "Получить запись по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_items",
          "any"
        ]
      },
      "patch": {
        "operationId": "ItemsController_update",
        "summary": "Обновление записи по uuid транзакцией",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновили запись по uuid. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзакция не выполнена.Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_items",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "ItemsController_remove",
        "summary": "Удаление записи по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Удалили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_items",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/articles": {
      "post": {
        "operationId": "ArticlesController_create",
        "summary": "Создание записи транзакцией",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArticleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Запись создана успешно. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзакция не выполнена.Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_articles",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "get": {
        "operationId": "ArticlesController_findAll",
        "summary": "Получить список записей",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Получили список записей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetArticleDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Транзакция не выполнена.Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_articles",
          "any"
        ]
      }
    },
    "/api/v1/articles/bulk": {
      "post": {
        "operationId": "ArticlesController_createBulk",
        "summary": "Создание несколько записей за раз транзакцией",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBulkArticleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Записи добавлены в БД. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзакция не выполнена.Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_articles",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/articles/filter-one/url/{url}": {
      "get": {
        "operationId": "ArticlesController_findOneByUrl",
        "summary": "Просмотр записи по url",
        "parameters": [
          {
            "name": "url",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по url.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetArticleDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_articles",
          "any"
        ]
      }
    },
    "/api/v1/articles/{id}": {
      "get": {
        "operationId": "ArticlesController_findOne",
        "summary": "Получить запись по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetArticleDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_articles",
          "any"
        ]
      },
      "patch": {
        "operationId": "ArticlesController_update",
        "summary": "Обновление записи по uuid транзакцией",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateArticleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновили запись по uuid. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзакция не выполнена.Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_articles",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "ArticlesController_remove",
        "summary": "Удаление записи по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Удалили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_articles",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/contact-types": {
      "post": {
        "operationId": "ContactTypesController_create",
        "summary": "Создание записи",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Запись создана успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_contact-types",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "get": {
        "operationId": "ContactTypesController_findAll",
        "summary": "Получить список записей",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Получили список записей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetContactTypeDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_contact-types",
          "any"
        ]
      }
    },
    "/api/v1/contact-types/bulk": {
      "post": {
        "operationId": "ContactTypesController_createBulk",
        "summary": "Создание несколько записей за раз",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBulkContactTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Записи добавлены в БД",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_contact-types",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/contact-types/{id}": {
      "get": {
        "operationId": "ContactTypesController_findOne",
        "summary": "Получить запись по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContactTypeDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_contact-types",
          "any"
        ]
      },
      "patch": {
        "operationId": "ContactTypesController_update",
        "summary": "Обновление записи по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_contact-types",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "ContactTypesController_remove",
        "summary": "Удаление записи по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Удалили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_contact-types",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/helpers": {
      "post": {
        "operationId": "HelpersController_create",
        "summary": "Создание записи транзакцией",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHelperDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Запись создана успешно. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзакция не выполнена.Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_helpers",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "get": {
        "operationId": "HelpersController_findAll",
        "summary": "Получить список записей",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Получили список записей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetHelperDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_helpers",
          "any"
        ]
      }
    },
    "/api/v1/helpers/bulk": {
      "post": {
        "operationId": "HelpersController_createBulk",
        "summary": "Создание несколько записей за раз транзакцией",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBulkHelperDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Записи добавлены в БД. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзакция не выполнена.Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_helpers",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/helpers/{id}": {
      "get": {
        "operationId": "HelpersController_findOne",
        "summary": "Получить запись по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHelperDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_helpers",
          "any"
        ]
      },
      "patch": {
        "operationId": "HelpersController_update",
        "summary": "Обновление записи по uuid транзакцией",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHelperDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновили запись по uuid. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Транзакция не выполнена.Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_helpers",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "HelpersController_remove",
        "summary": "Удаление записи по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Удалили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_helpers",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/item-brands": {
      "post": {
        "operationId": "ItemBrandsController_create",
        "summary": "Создание записи",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemBrandDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Запись создана успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-brands",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "get": {
        "operationId": "ItemBrandsController_findAll",
        "summary": "Получить список записей",
        "parameters": [
          {
            "name": "format",
            "required": false,
            "in": "query",
            "example": "xml",
            "description": "Например: `xml`, `json`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили список записей\n\n\nПример XML:\n\n\n- `<?xml version=\"1.0\" encoding=\"UTF-8\"?>`\n- `<ARRAY>`\n  - `<OBJECT>`\n    - `<dp_id>1</dp_id>`\n    - `<dp_name>DE-PA Electric</dp_name>`\n    - `<dp_photoUrl>https://example.com/img.png</dp_photoUrl>`\n    - `<dp_urlSegment>de-pa-electric</dp_urlSegment>`\n    - `<dp_sortingIndex>10000</dp_sortingIndex>`\n    - `<dp_seoKeywords>de-pa electric</dp_seoKeywords>`\n    - `<dp_seoDescription>Продукция DE-PA Electric</dp_seoDescription>`\n    - `<dp_isHidden>false</dp_isHidden>`\n  - `</OBJECT>`\n  - `<OBJECT>`\n    - `<!-- Аналогично как и первый элемент массива -->`\n  - `</OBJECT>`\n- `</ARRAY>`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemBrandWithIdDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-brands",
          "any"
        ]
      }
    },
    "/api/v1/item-brands/bulk": {
      "post": {
        "operationId": "ItemBrandsController_createBulk",
        "summary": "Создание несколько записей за раз",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBulkItemBrandDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Записи добавлены в БД",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-brands",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "put": {
        "operationId": "ItemBrandsController_updateBulk",
        "summary": "Обновление записей транзакцией",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBulkItemBrandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновили записи. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-brands",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/item-brands/{id}": {
      "get": {
        "operationId": "ItemBrandsController_findOne",
        "summary": "Получить запись по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemBrandWithIdDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-brands",
          "any"
        ]
      },
      "patch": {
        "operationId": "ItemBrandsController_update",
        "summary": "Обновление записи по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemBrandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат данных в JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "В БД уже есть запись с таким полем",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-brands",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "ItemBrandsController_remove",
        "summary": "Удаление записи по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Удалили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли администратора \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-brands",
          "ADMIN"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/item-brands/filter-one/url/{url}": {
      "get": {
        "operationId": "ItemBrandsController_findOneByUrl",
        "summary": "Получить запись по id",
        "parameters": [
          {
            "name": "url",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemBrandWithIdDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_item-brands",
          "any"
        ]
      }
    },
    "/api/v1/orders": {
      "post": {
        "operationId": "OrdersController_create",
        "summary": "Создание записи транзакцией",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Запись создана успешно. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_orders",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "get": {
        "operationId": "OrdersController_findAll",
        "summary": "Получить список записей",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Получили список записей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetOrderDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_orders",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/orders/no-auth": {
      "post": {
        "operationId": "OrdersController_createAsAnonim",
        "summary": "Создание записи транзакцией",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNoAuthOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Запись создана успешно. Транзакция выполнена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_orders",
          "any"
        ]
      }
    },
    "/api/v1/orders/{id}": {
      "get": {
        "operationId": "OrdersController_findOne",
        "summary": "Получить запись по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderWithIdDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_orders",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/orders/{id}/is-canceled": {
      "patch": {
        "operationId": "OrdersController_patchIsCanceledByClient",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api_v1_orders",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/orders/{id}/is-received": {
      "patch": {
        "operationId": "OrdersController_patchIsReceivedByClient",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api_v1_orders",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/orders/{id}/send-check": {
      "post": {
        "operationId": "OrdersController_sendToEmailCheck",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendCheckDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Документ счёт-фактура отправлен на электронную почту",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_orders",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/apk-versions/last": {
      "get": {
        "operationId": "ApkVersionsController_findLast",
        "summary": "Получить запись по id",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApkVersionsDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_apk-versions"
        ]
      }
    },
    "/api/v1/favorite-items/{itemId}": {
      "post": {
        "operationId": "FavoriteItemsController_like",
        "summary": "Создание записи",
        "parameters": [
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Запись создана успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_favorite-items",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "FavoriteItemsController_unLike",
        "summary": "Удаление записи по id",
        "parameters": [
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Удалили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_favorite-items",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/favorite-items": {
      "get": {
        "operationId": "FavoriteItemsController_findAll",
        "summary": "Получить список записей",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Получили список записей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetFavoriteItemDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_favorite-items",
          "user"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/manager/orders": {
      "get": {
        "operationId": "ManagerController_getOrders",
        "summary": "Получить список записей",
        "parameters": [
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили список записей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ManagerGetOrder"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли менеджера \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "MANAGER",
          "api_v1_manager",
          "MANAGER"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/manager/orders/{id}": {
      "get": {
        "operationId": "ManagerController_getOrder",
        "summary": "Получить запись по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderWithIdDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли менеджера \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "MANAGER",
          "api_v1_manager",
          "MANAGER"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/manager/users/{id}": {
      "get": {
        "operationId": "ManagerController_getUser",
        "summary": "Получить запись по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли менеджера \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "MANAGER",
          "api_v1_manager",
          "MANAGER"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/manager/orders/{id}/is-canceled": {
      "patch": {
        "operationId": "ManagerController_patchOrderIsCanceledByManager",
        "summary": "",
        "description": "Отмена заявки",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли менеджера \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "MANAGER",
          "api_v1_manager",
          "MANAGER"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/manager/orders/{id}/is-sented": {
      "patch": {
        "operationId": "ManagerController_patchOrderIsSentedByManager",
        "summary": "",
        "description": "Пометка заявки отправленной",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли менеджера \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "MANAGER",
          "api_v1_manager",
          "MANAGER"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/v1/manager/order-statuses": {
      "post": {
        "operationId": "ManagerController_createOrderStatus",
        "summary": "Создание записи",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderStatusDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Запись создана успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли менеджера \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "MANAGER",
          "api_v1_manager",
          "MANAGER"
        ]
      }
    },
    "/api/v1/manager/order-statuses/{id}/orders/{orderId}": {
      "delete": {
        "operationId": "ManagerController_removeOrderStatus",
        "summary": "Удаление записи по id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Удалили запись по id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Access токен просрочен \n\nAccess токен не передан \n\nУ пользователя нет роли менеджера \n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Запись не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          },
          "500": {
            "description": "Что-то пошло не так на сервере.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "MANAGER",
          "api_v1_manager",
          "MANAGER"
        ]
      }
    },
    "/api/v1/order-statuses/{id}": {
      "get": {
        "operationId": "OrderStatusesController_findAll",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api_v1_order-statuses",
          "any"
        ]
      }
    },
    "/api/v1/portal-nalog-gov-by/{unp}": {
      "get": {
        "operationId": "PortalNalogGovByController_findOne",
        "parameters": [
          {
            "name": "unp",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnpDto"
                }
              }
            }
          }
        },
        "tags": [
          "api_v1_portal-nalog-gov-by"
        ]
      }
    }
  },
  "info": {
    "title": "REST API документация",
    "description": "Роли: \n\n- [any](#/any) - любой пользователь может выполнять запрос \n\n- [user](#/user) - зарегистрированный пользователь может выполнять запрос \n\n- [ADMIN](#/ADMIN) - зарегистрированный пользователь с ролью ADMIN может выполнять запрос \n\n- [MANAGER](#/MANAGER) - зарегистрированный пользователь с ролью MANAGER может выполнять запрос \n\nЭндпоинты: \n\n- [/api/v1/users](#/api_v1_users) - регистрация, подтверждение аккаунта, забыли пароль, смена пароля, смена e-mail, отмена смены e-mail \n\n- [/api/v1/sessions](#/api_v1_sessions) - работа с сессиями \n\n- [/api/v1/apk-versions](#/api_v1_apk-versions) - информация о последней версии для Android \n\n- [/api/v1/item-characteristics](#/api_v1_item-characteristics) - характеристики номенклатуры \n\n- [/api/v1/item-brands](#/api_v1_item-brands) - производители номенклатуры \n\n- [/api/v1/item-categories](#/api_v1_item-categories) - категории номенклатуры \n\n- [/api/v1/items](#/api_v1_items) - номенклатура \n\n- [/api/v1/favorite-items](#/api_v1_favorite-items) - избранные \n\n- [/api/v1/orders](#/api_v1_orders) - заказы \n\n- [/api/v1/articles](#/api_v1_articles) - новости (статьи) \n\n- [/api/v1/contact-types](#/api_v1_contact-types) - типы контактов \n\n- [/api/v1/helpers](#/api_v1_helpers) - контакты юр. лица для клиентов \n\n- [/api/v1/manager](#/api_v1_manager) - эндпоинты для менеджера \n\n**Таблица - Роли и их доступные эндпоинты** \n\n|Роль|Метод|Эндпоинт| \n|---|---|---| \n|any|POST|/api/v1/users| \n|any|GET|/api/v1/users/activate-account/{token}| \n|user|PATCH|/api/v1/users/change-email| \n|any|GET|/api/v1/users/change-email/{token}/confirm| \n|any|GET|/api/v1/users/change-email/{token}/delete| \n|any|POST|/api/v1/users/forget-password| \n|user|PATCH|/api/v1/users/change-password| \n| | | \n|any|POST|/api/v1/sessions| \n|user|GET|/api/v1/sessions| \n|any|PATCH|/api/v1/sessions| \n|user|DELETE|/api/v1/sessions| \n|user|POST|/api/v1/sessions/logout| \n|user|DELETE|/api/v1/sessions/{id}| \n| | | \n|any|GET|/api/v1/apk-versions| \n| | | \n|ADMIN|POST|/api/v1/item-characteristics| \n|any|GET|/api/v1/item-characteristics| \n|ADMIN|POST|/api/v1/item-characteristics/bulk| \n|ADMIN|PUT|/api/v1/item-characteristics/bulk| \n|any|GET|/api/v1/item-characteristics/{id}| \n|ADMIN|PATCH|/api/v1/item-characteristics/{id}| \n|ADMIN|DELETE|/api/v1/item-characteristics/{id}| \n| | | \n|ADMIN|POST|/api/v1/item-brands| \n|any|GET|/api/v1/item-brands| \n|ADMIN|POST|/api/v1/item-brands/bulk| \n|ADMIN|PUT|/api/v1/item-brands/bulk| \n|any|GET|/api/v1/item-brands/{id}| \n|ADMIN|PATCH|/api/v1/item-brands/{id}| \n|ADMIN|DELETE|/api/v1/item-brands/{id}| \n| | | \n|ADMIN|POST|/api/v1/item-categories| \n|any|GET|/api/v1/item-categories| \n|ADMIN|POST|/api/v1/item-categories/bulk| \n|ADMIN|PUT|/api/v1/item-categories/bulk| \n|any|GET|/api/v1/item-categories/{id}| \n|ADMIN|PATCH|/api/v1/item-categories/{id}| \n|ADMIN|DELETE|/api/v1/item-categories/{id}| \n| | | \n|ADMIN|POST|/api/v1/items| \n|any|GET|/api/v1/items| \n|ADMIN|POST|/api/v1/items/bulk| \n|ADMIN|PUT|/api/v1/items/bulk| \n|any|GET|/api/v1/items//model/{model}| \n|any|POST|/api/v1/items/filter/models| \n|any|GET|/api/v1/items/search/{search}| \n|any|GET|/api/v1/items/search-all/{search}| \n|any|GET|/api/v1/items/{id}| \n|ADMIN|PATCH|/api/v1/items/{id}| \n|ADMIN|DELETE|/api/v1/items/{id}| \n| | | \n|user|POST|/api/v1/favorite-items/{id}| \n|user|DELETE|/api/v1/favorite-items/{id}| \n|user|GET|/api/v1/favorite-items| \n| | | \n|user|POST|/api/v1/order| \n|any|GET|/api/v1/order| \n|user|GET|/api/v1/order/{id}| \n|MODER|PATCH|/api/v1/order/{id}/completed| \n|user|PATCH|/api/v1/order/{id}/cancel| \n| | | \n|ADMIN|POST|/api/v1/articles| \n|any|GET|/api/v1/articles| \n|ADMIN|POST|/api/v1/articles/bulk| \n|any|GET|/api/v1/articles/url/{url}| \n|any|GET|/api/v1/articles/{id}| \n|ADMIN|PATCH|/api/v1/articles/{id}| \n|ADMIN|DELETE|/api/v1/articles/{id}| \n| | | \n|ADMIN|POST|/api/v1/contact-types| \n|any|GET|/api/v1/contact-types| \n|ADMIN|POST|/api/v1/contact-types/bulk| \n|any|GET|/api/v1/contact-types/{id}| \n|ADMIN|PATCH|/api/v1/contact-types/{id}| \n|ADMIN|DELETE|/api/v1/contact-types/{id}| \n| | | \n|ADMIN|POST|/api/v1/helpers| \n|any|GET|/api/v1/helpers| \n|ADMIN|POST|/api/v1/helpers/bulk| \n|any|GET|/api/v1/helpers/{id}| \n|ADMIN|PATCH|/api/v1/helpers/{id}| \n|ADMIN|DELETE|/api/v1/helpers/{id}| \n",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "api_v1_users",
      "description": "Регистрация"
    },
    {
      "name": "api_v1_sessions",
      "description": "Работа с сессиями"
    },
    {
      "name": "api_v1_apk-versions",
      "description": "Информация о последней версии для Android"
    },
    {
      "name": "api_v1_item-characteristics",
      "description": "Характеристики номенклатуры"
    },
    {
      "name": "api_v1_item-brands",
      "description": "Производители номенклатуры"
    },
    {
      "name": "api_v1_item-categories",
      "description": "Категории номенклатуры"
    },
    {
      "name": "api_v1_items",
      "description": "Номенклатура"
    },
    {
      "name": "api_v1_favorite-items",
      "description": "Избранные"
    },
    {
      "name": "api_v1_orders",
      "description": "Заявка номенклатуры"
    },
    {
      "name": "api_v1_articles",
      "description": "Новости (статьи)"
    },
    {
      "name": "api_v1_contact-types",
      "description": "Типы контакта"
    },
    {
      "name": "api_v1_helpers",
      "description": "Контакты (список контактов юр. лица для клиентов)"
    },
    {
      "name": "api_v1_manager",
      "description": "Эндпоинты для менеджера"
    },
    {
      "name": "any",
      "description": "Для любого пользователя"
    },
    {
      "name": "user",
      "description": "Для зарегистированных пользователей (нужен токен доступа)"
    },
    {
      "name": "ADMIN",
      "description": "Для зарегистированных пользователей (нужен access токен и роль ADMIN)"
    },
    {
      "name": "MANAGER",
      "description": "Для зарегистированных пользователей (нужен access токен и роль MANAGER)"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "access-token": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "access token - токен доступа",
        "in": "header"
      },
      "refresh-token": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "refresh token - токен обновления",
        "in": "header"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "dp_login": {
            "type": "string",
            "example": "user123"
          },
          "dp_email": {
            "type": "string",
            "example": "user123@example.com"
          },
          "dp_password": {
            "type": "string",
            "example": "secret123"
          },
          "dp_unp": {
            "type": "string",
            "example": "1234567890123"
          },
          "dp_nameLegalEntity": {
            "type": "string",
            "example": "Частное торгово-производственное унитарное предприятие \"Иванов\""
          },
          "dp_shortNameLegalEntity": {
            "type": "string",
            "example": "Частное предприятие \"Иванов\""
          },
          "dp_address": {
            "type": "string",
            "example": "224017, Беларусь, Брестская обл., г. Брест, ул. Московская, д. 267"
          },
          "dp_receptionPhone": {
            "type": "string",
            "example": "+375331112233"
          },
          "dp_firstName": {
            "type": "string",
            "example": "Иван"
          },
          "dp_lastName": {
            "type": "string",
            "example": "Иванович"
          },
          "dp_middleName": {
            "type": "string",
            "example": "Иванов"
          }
        },
        "required": [
          "dp_login",
          "dp_email",
          "dp_password",
          "dp_unp",
          "dp_nameLegalEntity",
          "dp_shortNameLegalEntity",
          "dp_address",
          "dp_receptionPhone",
          "dp_firstName",
          "dp_lastName",
          "dp_middleName"
        ]
      },
      "CreateUserResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 201
          },
          "message": {
            "type": "string"
          },
          "dp_accessToken": {
            "type": "string",
            "example": "jwt"
          },
          "dp_refreshToken": {
            "type": "string",
            "example": "jwt"
          }
        },
        "required": [
          "statusCode",
          "message",
          "dp_accessToken",
          "dp_refreshToken"
        ]
      },
      "HttpResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 0
          },
          "message": {
            "type": "string",
            "example": "сообщение"
          }
        },
        "required": [
          "statusCode",
          "message"
        ]
      },
      "GetUserDto": {
        "type": "object",
        "properties": {
          "dp_id": {
            "type": "number"
          },
          "dp_unp": {
            "type": "string"
          },
          "dp_nameLegalEntity": {
            "type": "string"
          },
          "dp_shortNameLegalEntity": {
            "type": "string"
          },
          "dp_address": {
            "type": "string"
          }
        },
        "required": [
          "dp_id",
          "dp_unp",
          "dp_nameLegalEntity",
          "dp_shortNameLegalEntity",
          "dp_address"
        ]
      },
      "ChangeEmailDto": {
        "type": "object",
        "properties": {
          "dp_email": {
            "type": "string",
            "example": "user@example.com"
          }
        },
        "required": [
          "dp_email"
        ]
      },
      "ForgetPasswordDto": {
        "type": "object",
        "properties": {
          "emailOrLogin": {
            "type": "string",
            "example": "user123@example.com"
          }
        },
        "required": [
          "emailOrLogin"
        ]
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "dp_oldPassword": {
            "type": "string",
            "example": "secret123"
          },
          "dp_newPassword": {
            "type": "string",
            "example": "secret321"
          }
        },
        "required": [
          "dp_oldPassword",
          "dp_newPassword"
        ]
      },
      "CreateSessionDto": {
        "type": "object",
        "properties": {
          "emailOrLogin": {
            "type": "string",
            "example": "user123@example.com"
          },
          "dp_password": {
            "type": "string",
            "example": "secret123"
          }
        },
        "required": [
          "emailOrLogin",
          "dp_password"
        ]
      },
      "CreateSessionResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 201
          },
          "message": {
            "type": "string"
          },
          "dp_accessToken": {
            "type": "string",
            "example": "jwt"
          },
          "dp_refreshToken": {
            "type": "string",
            "example": "jwt"
          }
        },
        "required": [
          "statusCode",
          "message",
          "dp_accessToken",
          "dp_refreshToken"
        ]
      },
      "GetSessionDto": {
        "type": "object",
        "properties": {
          "dp_id": {
            "type": "number",
            "example": 1
          },
          "dp_date": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01T00:00:00:000Z"
          },
          "dp_ip": {
            "type": "string",
            "example": "111.111.111.111"
          },
          "dp_agent": {
            "type": "string",
            "example": "Firefox"
          }
        },
        "required": [
          "dp_id",
          "dp_date",
          "dp_ip",
          "dp_agent"
        ]
      },
      "GetSessionsDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 0
          },
          "message": {
            "type": "string",
            "example": "сообщение"
          },
          "dp_current": {
            "$ref": "#/components/schemas/GetSessionDto"
          },
          "dp_other": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSessionDto"
            }
          }
        },
        "required": [
          "statusCode",
          "message",
          "dp_current",
          "dp_other"
        ]
      },
      "UpdateSessionResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 0
          },
          "message": {
            "type": "string",
            "example": "сообщение"
          },
          "dp_accessToken": {
            "type": "string",
            "example": "jwt"
          }
        },
        "required": [
          "statusCode",
          "message",
          "dp_accessToken"
        ]
      },
      "CreateItemCategoryDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Аксессуары"
          },
          "dp_urlSegment": {
            "type": "string",
            "example": "dp-accessories"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "вилка вилки патроны патрон"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Продукты DE-PA Electric. Аксессуары"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_itemBrandId": {
            "type": "number",
            "example": 0
          }
        },
        "required": [
          "dp_name",
          "dp_urlSegment",
          "dp_photoUrl",
          "dp_sortingIndex",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_isHidden"
        ]
      },
      "ItemCategoryExcludeIdDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Аксессуары"
          },
          "dp_urlSegment": {
            "type": "string",
            "example": "dp-accessories"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "вилка вилки патроны патрон"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Продукты DE-PA Electric. Аксессуары"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_itemBrandId": {
            "type": "number",
            "example": 0
          }
        },
        "required": [
          "dp_name",
          "dp_urlSegment",
          "dp_photoUrl",
          "dp_sortingIndex",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_isHidden"
        ]
      },
      "CreateBulkItemCategoryDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemCategoryExcludeIdDto"
            }
          }
        },
        "required": [
          "bulk"
        ]
      },
      "GetItemCategoryDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Аксессуары"
          },
          "dp_urlSegment": {
            "type": "string",
            "example": "dp-accessories"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "вилка вилки патроны патрон"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Продукты DE-PA Electric. Аксессуары"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_itemBrandId": {
            "type": "number",
            "example": 0
          },
          "dp_id": {
            "type": "number",
            "example": 0
          }
        },
        "required": [
          "dp_name",
          "dp_urlSegment",
          "dp_photoUrl",
          "dp_sortingIndex",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_isHidden",
          "dp_id"
        ]
      },
      "UpdateItemCategoryDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Аксессуары"
          },
          "dp_urlSegment": {
            "type": "string",
            "example": "dp-accessories"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "вилка вилки патроны патрон"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Продукты DE-PA Electric. Аксессуары"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_itemBrandId": {
            "type": "number",
            "example": 0
          }
        },
        "required": [
          "dp_name",
          "dp_urlSegment",
          "dp_photoUrl",
          "dp_sortingIndex",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_isHidden"
        ]
      },
      "ItemCategoryWithIdDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Аксессуары"
          },
          "dp_urlSegment": {
            "type": "string",
            "example": "dp-accessories"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "вилка вилки патроны патрон"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Продукты DE-PA Electric. Аксессуары"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_itemBrandId": {
            "type": "number",
            "example": 0
          },
          "dp_id": {
            "type": "number",
            "example": 0
          }
        },
        "required": [
          "dp_name",
          "dp_urlSegment",
          "dp_photoUrl",
          "dp_sortingIndex",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_isHidden",
          "dp_id"
        ]
      },
      "UpdateBulkItemCategoryDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemCategoryWithIdDto"
            }
          }
        },
        "required": [
          "bulk"
        ]
      },
      "CreateItemCharacteristicDto": {
        "type": "object",
        "properties": {
          "dp_sortingIndex": {
            "type": "number",
            "example": 0
          },
          "dp_name": {
            "type": "string",
            "example": "Высота"
          },
          "dp_unit": {
            "type": "string",
            "example": "см"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "dp_sortingIndex",
          "dp_name",
          "dp_unit",
          "dp_isHidden"
        ]
      },
      "ItemCharacteristicExcludeIdDto": {
        "type": "object",
        "properties": {
          "dp_sortingIndex": {
            "type": "number",
            "example": 0
          },
          "dp_name": {
            "type": "string",
            "example": "Высота"
          },
          "dp_unit": {
            "type": "string",
            "example": "см"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "dp_sortingIndex",
          "dp_name",
          "dp_unit",
          "dp_isHidden"
        ]
      },
      "CreateBulkItemCharacteristicDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemCharacteristicExcludeIdDto"
            }
          }
        },
        "required": [
          "bulk"
        ]
      },
      "ItemCharacteristicWithIdDto": {
        "type": "object",
        "properties": {
          "dp_sortingIndex": {
            "type": "number",
            "example": 0
          },
          "dp_name": {
            "type": "string",
            "example": "Высота"
          },
          "dp_unit": {
            "type": "string",
            "example": "см"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_id": {
            "type": "number",
            "example": 0
          }
        },
        "required": [
          "dp_sortingIndex",
          "dp_name",
          "dp_unit",
          "dp_isHidden",
          "dp_id"
        ]
      },
      "UpdateItemCharacteristicDto": {
        "type": "object",
        "properties": {
          "dp_sortingIndex": {
            "type": "number",
            "example": 0
          },
          "dp_name": {
            "type": "string",
            "example": "Высота"
          },
          "dp_unit": {
            "type": "string",
            "example": "см"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "dp_sortingIndex",
          "dp_name",
          "dp_unit",
          "dp_isHidden"
        ]
      },
      "UpdateBulkItemCharacteristicDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemCharacteristicWithIdDto"
            }
          }
        },
        "required": [
          "bulk"
        ]
      },
      "LstItemCharacteristicExcludeIdDto": {
        "type": "object",
        "properties": {
          "dp_characteristicId": {
            "type": "number",
            "example": 1
          },
          "dp_value": {
            "type": "string",
            "example": "12"
          }
        },
        "required": [
          "dp_characteristicId",
          "dp_value"
        ]
      },
      "LstItemGaleryExcludeIdDto": {
        "type": "object",
        "properties": {
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          }
        },
        "required": [
          "dp_photoUrl"
        ]
      },
      "CreateItemDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Розетка тройная встравая с заземлением"
          },
          "dp_model": {
            "type": "string",
            "example": "10012"
          },
          "dp_cost": {
            "type": "number",
            "example": 10.61
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_itemCategoryId": {
            "type": "number",
            "example": 1
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "розетка розетки"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Розетка тройная встравая с заземлением. 10012"
          },
          "dp_itemCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LstItemCharacteristicExcludeIdDto"
            }
          },
          "dp_itemGalery": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LstItemGaleryExcludeIdDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_model",
          "dp_cost",
          "dp_photoUrl",
          "dp_itemCategoryId",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_itemCharacteristics",
          "dp_itemGalery"
        ]
      },
      "ItemExcludeIdDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Розетка тройная встравая с заземлением"
          },
          "dp_model": {
            "type": "string",
            "example": "10012"
          },
          "dp_cost": {
            "type": "number",
            "example": 10.61
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_itemCategoryId": {
            "type": "number",
            "example": 1
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "розетка розетки"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Розетка тройная встравая с заземлением. 10012"
          },
          "dp_itemCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LstItemCharacteristicExcludeIdDto"
            }
          },
          "dp_itemGalery": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LstItemGaleryExcludeIdDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_model",
          "dp_cost",
          "dp_photoUrl",
          "dp_itemCategoryId",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_itemCharacteristics",
          "dp_itemGalery"
        ]
      },
      "CreateBulkItemDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemExcludeIdDto"
            }
          }
        },
        "required": [
          "bulk"
        ]
      },
      "LstItemCharacteristicWithIdDto": {
        "type": "object",
        "properties": {
          "dp_id": {
            "type": "number",
            "example": 1
          },
          "dp_itemId": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "dp_characteristicId": {
            "type": "number",
            "example": 1
          },
          "dp_value": {
            "type": "string",
            "example": "12"
          }
        },
        "required": [
          "dp_id",
          "dp_itemId",
          "dp_characteristicId",
          "dp_value"
        ]
      },
      "LstItemGaleryWithIdDto": {
        "type": "object",
        "properties": {
          "dp_id": {
            "type": "number",
            "example": 1
          },
          "dp_itemId": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          }
        },
        "required": [
          "dp_id",
          "dp_itemId",
          "dp_photoUrl"
        ]
      },
      "GetItemDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Розетка тройная встравая с заземлением"
          },
          "dp_model": {
            "type": "string",
            "example": "10012"
          },
          "dp_cost": {
            "type": "number",
            "example": 10.61
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_itemCategoryId": {
            "type": "number",
            "example": 1
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "розетка розетки"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Розетка тройная встравая с заземлением. 10012"
          },
          "dp_id": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "dp_itemCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LstItemCharacteristicWithIdDto"
            }
          },
          "dp_itemGalery": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LstItemGaleryWithIdDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_model",
          "dp_cost",
          "dp_photoUrl",
          "dp_itemCategoryId",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_id",
          "dp_itemCharacteristics",
          "dp_itemGalery"
        ]
      },
      "FindItemModelsDto": {
        "type": "object",
        "properties": {
          "models": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "models"
        ]
      },
      "FindItemIdsDto": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "ids"
        ]
      },
      "SearchItemsDto": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string"
          }
        },
        "required": [
          "search"
        ]
      },
      "SearchAllItemsDto": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string"
          }
        },
        "required": [
          "search"
        ]
      },
      "UpdateItemDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Розетка тройная встравая с заземлением"
          },
          "dp_model": {
            "type": "string",
            "example": "10012"
          },
          "dp_cost": {
            "type": "number",
            "example": 10.61
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_itemCategoryId": {
            "type": "number",
            "example": 1
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "розетка розетки"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Розетка тройная встравая с заземлением. 10012"
          },
          "dp_itemCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LstItemCharacteristicExcludeIdDto"
            }
          },
          "dp_itemGalery": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LstItemGaleryExcludeIdDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_model",
          "dp_cost",
          "dp_photoUrl",
          "dp_itemCategoryId",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_itemCharacteristics",
          "dp_itemGalery"
        ]
      },
      "ItemWithIdDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Розетка тройная встравая с заземлением"
          },
          "dp_model": {
            "type": "string",
            "example": "10012"
          },
          "dp_cost": {
            "type": "number",
            "example": 10.61
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_itemCategoryId": {
            "type": "number",
            "example": 1
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "розетка розетки"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Розетка тройная встравая с заземлением. 10012"
          },
          "dp_id": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "dp_itemCharacteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LstItemCharacteristicWithIdDto"
            }
          },
          "dp_itemGalery": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LstItemGaleryWithIdDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_model",
          "dp_cost",
          "dp_photoUrl",
          "dp_itemCategoryId",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_id",
          "dp_itemCharacteristics",
          "dp_itemGalery"
        ]
      },
      "UpdateBulkItemDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemWithIdDto"
            }
          }
        },
        "required": [
          "bulk"
        ]
      },
      "ArticleAttachedLinksExcludeIdDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Сертификат 1"
          },
          "dp_url": {
            "type": "string",
            "example": "https://example.com/certificate1.pdf"
          }
        },
        "required": [
          "dp_name",
          "dp_url"
        ]
      },
      "CreateArticleDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Сертификаты"
          },
          "dp_date": {
            "type": "string",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "dp_urlSegment": {
            "type": "string",
            "example": "certificates"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_text": {
            "type": "string",
            "example": "My certificates"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "сертификаты сертификат"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Страница сертификатов"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_articleAttachedLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleAttachedLinksExcludeIdDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_date",
          "dp_urlSegment",
          "dp_photoUrl",
          "dp_text",
          "dp_sortingIndex",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_isHidden",
          "dp_articleAttachedLinks"
        ]
      },
      "ArticleExcludeIdDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Сертификаты"
          },
          "dp_date": {
            "type": "string",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "dp_urlSegment": {
            "type": "string",
            "example": "certificates"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_text": {
            "type": "string",
            "example": "My certificates"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "сертификаты сертификат"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Страница сертификатов"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_articleAttachedLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleAttachedLinksExcludeIdDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_date",
          "dp_urlSegment",
          "dp_photoUrl",
          "dp_text",
          "dp_sortingIndex",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_isHidden",
          "dp_articleAttachedLinks"
        ]
      },
      "CreateBulkArticleDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleExcludeIdDto"
            }
          }
        },
        "required": [
          "bulk"
        ]
      },
      "ArticleAttachedLinksWithIdDto": {
        "type": "object",
        "properties": {
          "dp_id": {
            "type": "number",
            "example": 1
          },
          "dp_articleId": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "dp_name": {
            "type": "string",
            "example": "Сертификат 1"
          },
          "dp_url": {
            "type": "string",
            "example": "https://example.com/certificate1.pdf"
          }
        },
        "required": [
          "dp_id",
          "dp_articleId",
          "dp_name",
          "dp_url"
        ]
      },
      "GetArticleDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Сертификаты"
          },
          "dp_date": {
            "type": "string",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "dp_urlSegment": {
            "type": "string",
            "example": "certificates"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_text": {
            "type": "string",
            "example": "My certificates"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "сертификаты сертификат"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Страница сертификатов"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_id": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "dp_articleAttachedLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleAttachedLinksWithIdDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_date",
          "dp_urlSegment",
          "dp_photoUrl",
          "dp_text",
          "dp_sortingIndex",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_isHidden",
          "dp_id",
          "dp_articleAttachedLinks"
        ]
      },
      "UpdateArticleDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Сертификаты"
          },
          "dp_date": {
            "type": "string",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "dp_urlSegment": {
            "type": "string",
            "example": "certificates"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_text": {
            "type": "string",
            "example": "My certificates"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "сертификаты сертификат"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Страница сертификатов"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_articleAttachedLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArticleAttachedLinksExcludeIdDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_date",
          "dp_urlSegment",
          "dp_photoUrl",
          "dp_text",
          "dp_sortingIndex",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_isHidden",
          "dp_articleAttachedLinks"
        ]
      },
      "CreateContactTypeDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "whatsapp"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "dp_name",
          "dp_isHidden"
        ]
      },
      "ContactTypeExcludeIdDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "whatsapp"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "dp_name",
          "dp_isHidden"
        ]
      },
      "CreateBulkContactTypeDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactTypeExcludeIdDto"
            }
          }
        },
        "required": [
          "bulk"
        ]
      },
      "GetContactTypeDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "whatsapp"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_id": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "dp_name",
          "dp_isHidden",
          "dp_id"
        ]
      },
      "UpdateContactTypeDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "whatsapp"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "dp_name",
          "dp_isHidden"
        ]
      },
      "HelperContactTypeExcludeIdDto": {
        "type": "object",
        "properties": {
          "dp_contactTypeId": {
            "type": "number",
            "example": 1
          },
          "dp_value": {
            "type": "string",
            "example": "+111223334455"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "dp_contactTypeId",
          "dp_value",
          "dp_isHidden"
        ]
      },
      "CreateHelperDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Директор"
          },
          "dp_text": {
            "type": "string",
            "example": "текст"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_helperContactTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelperContactTypeExcludeIdDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_text",
          "dp_sortingIndex",
          "dp_isHidden",
          "dp_helperContactTypes"
        ]
      },
      "HelperExcludeIdDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Директор"
          },
          "dp_text": {
            "type": "string",
            "example": "текст"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_helperContactTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelperContactTypeExcludeIdDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_text",
          "dp_sortingIndex",
          "dp_isHidden",
          "dp_helperContactTypes"
        ]
      },
      "CreateBulkHelperDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelperExcludeIdDto"
            }
          }
        },
        "required": [
          "bulk"
        ]
      },
      "HelperContactTypeWithIdDto": {
        "type": "object",
        "properties": {
          "dp_id": {
            "type": "number",
            "example": 1
          },
          "dp_helperId": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "dp_contactTypeId": {
            "type": "number",
            "example": 1
          },
          "dp_value": {
            "type": "string",
            "example": "+111223334455"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "dp_id",
          "dp_helperId",
          "dp_contactTypeId",
          "dp_value",
          "dp_isHidden"
        ]
      },
      "GetHelperDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Директор"
          },
          "dp_text": {
            "type": "string",
            "example": "текст"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_id": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "dp_helperContactTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelperContactTypeWithIdDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_text",
          "dp_sortingIndex",
          "dp_isHidden",
          "dp_id",
          "dp_helperContactTypes"
        ]
      },
      "UpdateHelperDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "Директор"
          },
          "dp_text": {
            "type": "string",
            "example": "текст"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_helperContactTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelperContactTypeExcludeIdDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_text",
          "dp_sortingIndex",
          "dp_isHidden",
          "dp_helperContactTypes"
        ]
      },
      "CreateItemBrandDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "DE-PA Electric"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_urlSegment": {
            "type": "string",
            "example": "de-pa-electric"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "de-pa electric"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Продукция DE-PA Electric"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "dp_name",
          "dp_photoUrl",
          "dp_urlSegment",
          "dp_sortingIndex",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_isHidden"
        ]
      },
      "ItemBrandExcludeIdDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "DE-PA Electric"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_urlSegment": {
            "type": "string",
            "example": "de-pa-electric"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "de-pa electric"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Продукция DE-PA Electric"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "dp_name",
          "dp_photoUrl",
          "dp_urlSegment",
          "dp_sortingIndex",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_isHidden"
        ]
      },
      "CreateBulkItemBrandDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemBrandExcludeIdDto"
            }
          }
        },
        "required": [
          "bulk"
        ]
      },
      "ItemBrandWithIdDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "DE-PA Electric"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_urlSegment": {
            "type": "string",
            "example": "de-pa-electric"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "de-pa electric"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Продукция DE-PA Electric"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          },
          "dp_id": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "dp_name",
          "dp_photoUrl",
          "dp_urlSegment",
          "dp_sortingIndex",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_isHidden",
          "dp_id"
        ]
      },
      "UpdateItemBrandDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string",
            "example": "DE-PA Electric"
          },
          "dp_photoUrl": {
            "type": "string",
            "example": "https://example.com/img.png"
          },
          "dp_urlSegment": {
            "type": "string",
            "example": "de-pa-electric"
          },
          "dp_sortingIndex": {
            "type": "number",
            "example": 10000
          },
          "dp_seoKeywords": {
            "type": "string",
            "example": "de-pa electric"
          },
          "dp_seoDescription": {
            "type": "string",
            "example": "Продукция DE-PA Electric"
          },
          "dp_isHidden": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "dp_name",
          "dp_photoUrl",
          "dp_urlSegment",
          "dp_sortingIndex",
          "dp_seoKeywords",
          "dp_seoDescription",
          "dp_isHidden"
        ]
      },
      "UpdateBulkItemBrandDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemBrandWithIdDto"
            }
          }
        },
        "required": [
          "bulk"
        ]
      },
      "OrderItemDto": {
        "type": "object",
        "properties": {
          "dp_itemId": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "dp_count": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "dp_itemId",
          "dp_count"
        ]
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "dp_orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          }
        },
        "required": [
          "dp_orderItems"
        ]
      },
      "GetOrderDto": {
        "type": "object",
        "properties": {
          "dp_id": {
            "type": "string"
          },
          "dp_date": {
            "type": "string",
            "example": "0000-00-00T00:00:00.000Z"
          },
          "dp_userId": {
            "type": "number"
          },
          "dp_cancaledOn": {
            "type": "string",
            "example": "0000-00-00T00:00:00.000Z"
          },
          "dp_fulfilledOn": {
            "type": "string",
            "example": "0000-00-00T00:00:00.000Z"
          },
          "dp_receivedOn": {
            "type": "string",
            "example": "0000-00-00T00:00:00.000Z"
          }
        },
        "required": [
          "dp_id",
          "dp_date",
          "dp_userId",
          "dp_cancaledOn",
          "dp_fulfilledOn",
          "dp_receivedOn"
        ]
      },
      "CreateNoAuthOrderDto": {
        "type": "object",
        "properties": {
          "dp_name": {
            "type": "string"
          },
          "dp_email": {
            "type": "string"
          },
          "dp_phone": {
            "type": "string",
            "example": "+375331112233"
          },
          "dp_orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          }
        },
        "required": [
          "dp_name",
          "dp_email",
          "dp_phone",
          "dp_orderItems"
        ]
      },
      "GetOrderItem": {
        "type": "object",
        "properties": {
          "dp_id": {
            "type": "number"
          },
          "dp_orderId": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "dp_itemId": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "dp_count": {
            "type": "number"
          },
          "dp_cost": {
            "type": "number"
          }
        },
        "required": [
          "dp_id",
          "dp_orderId",
          "dp_itemId",
          "dp_count",
          "dp_cost"
        ]
      },
      "GetOrderWithIdDto": {
        "type": "object",
        "properties": {
          "dp_id": {
            "type": "string"
          },
          "dp_date": {
            "type": "string",
            "example": "0000-00-00T00:00:00.000Z"
          },
          "dp_userId": {
            "type": "number"
          },
          "dp_cancaledOn": {
            "type": "string",
            "example": "0000-00-00T00:00:00.000Z"
          },
          "dp_fulfilledOn": {
            "type": "string",
            "example": "0000-00-00T00:00:00.000Z"
          },
          "dp_receivedOn": {
            "type": "string",
            "example": "0000-00-00T00:00:00.000Z"
          },
          "dp_orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetOrderItem"
            }
          }
        },
        "required": [
          "dp_id",
          "dp_date",
          "dp_userId",
          "dp_cancaledOn",
          "dp_fulfilledOn",
          "dp_receivedOn",
          "dp_orderItems"
        ]
      },
      "SendCheckDto": {
        "type": "object",
        "properties": {
          "dp_checkingAccount": {
            "type": "string"
          },
          "dp_bank": {
            "type": "string"
          },
          "dp_bik": {
            "type": "string"
          }
        },
        "required": [
          "dp_checkingAccount",
          "dp_bank",
          "dp_bik"
        ]
      },
      "GetApkVersionsDto": {
        "type": "object",
        "properties": {
          "dp_date": {
            "type": "string",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "dp_version": {
            "type": "string",
            "example": "0.1.0"
          },
          "dp_url": {
            "type": "string",
            "example": "https://example.com/app-release-v0.1.0.apk"
          },
          "dp_id": {
            "type": "number",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
        },
        "required": [
          "dp_date",
          "dp_version",
          "dp_url",
          "dp_id"
        ]
      },
      "GetFavoriteItemDto": {
        "type": "object",
        "properties": {
          "dp_userId": {
            "type": "number",
            "example": 1
          },
          "dp_itemId": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          },
          "dp_id": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "dp_userId",
          "dp_itemId",
          "dp_id"
        ]
      },
      "ManagerGetOrder": {
        "type": "object",
        "properties": {
          "take": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "skip": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetOrderWithIdDto"
            }
          }
        },
        "required": [
          "take",
          "page",
          "totalPages",
          "skip",
          "data"
        ]
      },
      "CreateOrderStatusDto": {
        "type": "object",
        "properties": {
          "dp_status": {
            "type": "string"
          },
          "dp_orderId": {
            "type": "string",
            "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
        },
        "required": [
          "dp_status",
          "dp_orderId"
        ]
      },
      "UnpDataDto": {
        "type": "object",
        "properties": {
          "vunp": {
            "type": "string",
            "description": "УНП",
            "example": "100582333"
          },
          "vnaimp": {
            "type": "string",
            "description": "Наименование юридического лица",
            "example": "Министерство по налогам и сборам Республики Беларусь"
          },
          "vnaimk": {
            "type": "string",
            "description": "Краткое наименование юридического лица",
            "example": "МНС"
          },
          "vpadres": {
            "type": "string",
            "description": "Место нахождения юридического лица",
            "example": "г.Минск,ул.Советская,9"
          },
          "dreg": {
            "type": "string",
            "description": "Дата постановки на учет",
            "example": "30.06.1994"
          },
          "nmns": {
            "type": "string",
            "description": "Наименование инспекции МНС",
            "example": "Инспекция МНС по Московскому району г.Минска "
          },
          "vmns": {
            "type": "string",
            "description": "Наименование инспекции МНС",
            "example": "Инспекция МНС по Московскому району г.Минска "
          },
          "ckodsost": {
            "type": "string",
            "description": "Состояние (1 | L)",
            "example": "1"
          },
          "vkods": {
            "type": "string",
            "description": "Состояние (Действующий|Ликвидирован)",
            "example": "Действующий"
          },
          "dlikv": {
            "type": "string",
            "description": "Дата изменения состояния (DD.MM.YYYY | null)",
            "example": null
          },
          "vlikv": {
            "type": "string",
            "example": null
          }
        },
        "required": [
          "vunp",
          "vnaimp",
          "vnaimk",
          "vpadres",
          "dreg",
          "nmns",
          "vmns",
          "ckodsost",
          "vkods",
          "dlikv",
          "vlikv"
        ]
      },
      "GetUnpDto": {
        "type": "object",
        "properties": {
          "row": {
            "$ref": "#/components/schemas/UnpDataDto"
          }
        },
        "required": [
          "row"
        ]
      }
    }
  }
}